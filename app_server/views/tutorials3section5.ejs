<!doctype html>
<html lang="en" ng-app>
  <head>
    <title>Tutorials4Unity</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/bootstrap2/css/bootstrap.min.css">
    <link rel="stylesheet" href="/bootstrap2/css/bootstrap-responsive.min.css">
    <link rel="stylesheet" href="/bootstrap2/css/main.css">
    <link rel="stylesheet" href="/bootstrap2/css/ie9.css">
    <link rel="stylesheet" href="/bootstrap2/css/ie8.css">
    <link rel="stylesheet" href="/bootstrap2/css/font-awesome.min.css">
    <style></style>
    </head>
    <body>
  <div id="page-wrapper">
    <!-- Header-->
    <header id="header">
      <h1><a href="/">Tutorials4Unity</a></h1>
      <nav><a href="#menu">Menu</a></nav>
       <button onclick="topFunction()" id="myBtn" title="Go to top">Go to the Top</button>
    </header>
    <!-- Menu-->
    <nav id="menu">
      <div class="inner">
        <h2>Menu</h2>
        <ul class="links">
          <li><a href="/">Home</a></li>
          <li><a href="tutorialshome">Tutorials</a></li>
          <li><a href="resources">Resources</a></li>
          <li><a href="about">About</a></li>
          <li><a href="help">Help</a></li>
           <!--<li><a href="login">Log In</a></li>-->
          <!--<li><a href="signup">Sign Up</a></li>-->
        </ul><a href="#" class="close">Close</a>
      </div>
    </nav>
    <!-- Wrapper-->
    <section id="wrapper">
      <header>
        <div class="inner">
          
          <h2>Adding Objects</h2>
          
             <p>It's time to add in our items.</p>
             
          <h2>Items</h2>
          
             <p>Let's create some items to collect!</p>
             
             <iframe width="420" height="315"
          src="">
          </iframe>
        </div>
      </header>
      
      <!-- Content-->
      <div class="wrapper">
        <div class="inner">
      
          <p>Welcome back! </p>
            
            <p>We have our Player, we have our floor, but now...what is our game supposed to do anyways?

                Well, now we find out.
                
                Our game is going to be a very simple, but fun game. Basically we are going to have
                a bunch of different balls surround the player and when you click on them, they
                change color. The end goal will be click on all of the balls before the time runs
                out. You can then test your time against your friends and see who can do it the fastest. 
                
                In this chapter, we will be creating these balls and allow them to change color when
                we click on them.
                
                So, how do we do this?
                
                First make sure to have Unity and your project open. 
                
                Next, in our ‘Menu Bar’, we are going to click on ‘GameObject’. Go down to 3D object,
                slide over and click on ‘Sphere’. After clicking on sphere, you should see a ball
                appear in your ‘Hierarchy’ and in your Scene. 
                
                Click on your ‘Sphere’ in your hierarchy and let us look at our ‘Inspector Window’.
                First off we want to see what position our ‘Sphere’ is at. If it is not at position
                X=0, Y=0, Z=0, please fix this now. After fixing it, go into your ‘Scene View’,
                click on the green arrow pointing up, and drag it a little bit up. You want our 
                ‘Sphere’ object to be a little bit above our ‘Floor’ object, but not higher than
                what our ‘Player’ object can see. If you want the exact number, have your Y
                position be anywhere between Y=0.1 to Y= 5. We want our ‘Player’ to still see
                the ‘Sphere’ when we’re playing the game. 
                
                If you don’t see any arrows, then in our ‘Tool Bar’, click on the four arrows
                crossing each other (or the ‘Move Tool’). After you click on this, you should
                see arrows pointing out from our ‘Sphere’ object.
                
                Now so far you have seen one way to rename an object. Here is another way to
                rename an object. If you look at our ‘Inspector Window’ (after making sure
                that we still have our ‘Sphere’ object clicked), you will see the name of the
                current object that we are working on. If you click on it, you can actually
                change the name of our object. We are going to click and rename our ‘Sphere’
                object to become ‘Ball’. 
                
                Underneath where we changed the name, there is a label called ‘Tag’. A ‘Tag’
                in Unity is a way for us to keep track, label, and be able to identify what
                our objects are. By default, the ‘Tag’ for our ‘Ball’ is ‘Untagged’. For
                future chapters (and for reasons that you will understand later on), we
                are going to give a ‘Tag’, or label, to our ‘Ball’. 
                
                Click on where it says ‘Untagged’. The box should open up and you should
                see a lot of different choices. What we are going to do is create a custom
                tag, so go all of the way to the bottom of this and click on ‘Add Tag...’.
                The ‘Inspector’ should change to show you some of the custom tags you have
                already made for this game. Since this is the first one we have made, click
                on the ‘plus +’ sign. 
                
                A pop up should appear and it should ask you for the new tag name. Type in
                ‘BallObject’ and then click on ‘Save’. You should see ‘BallObject’ appear
                in your tags. Reclick on our ‘Ball’, reclick on ‘Untagged’, and then click
                on ‘BallObject’. This will officially give our ‘Ball’ a tag.   
                
                The next thing we are going to do is give a color to our ‘Ball’. After
                we give our ‘Ball’ some color, feel free to do the same to our ‘Floor’
                object. Just make sure that our ‘Floor’ is not the same color as our ‘Ball’. 

                </p>
                

          
     <div class="wrapper">
        <div class="inner">
           <p>Click on the Previous button if you think you missed something in the 
            last part or click the Next button to .</p>
          <div id="container">
            <button id="prevBtn" title="prev"><a href="tutorials3section3">Previous</a></button>
            <button id="nextBtn" title="next"><a href="tutorials3section5">Next</a></button>
          </div>
    
        </div>
      </div>
    </body>
    <!-- Footer-->
    <section id="footer">
      <div class="inner">
        <ul class="copyright">
          <li>© Untitled Inc. All rights reserved.</li>
          <li>Design: <a href="http://html5up.net">HTML5 UP</a></li>
        </ul>
      </div>
    </section>
  </div>
  <!-- Scripts-->
  
  <script src="bootstrap2/js/skel.min.js"></script>
  <script src="bootstrap2/js/jquery.min.js"></script>
  <script src="bootstrap2/js/jquery.scrollex.min.js"></script>
  <script src="bootstrap2/js/util.js"></script><!--[if lte IE 8]>
  <script src="bootstrap2/js/ie/respond.min.js"></script><![endif]-->
  <script src="bootstrap2/js/main.js"></script>
</body>