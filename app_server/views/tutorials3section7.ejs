<!doctype html>
<html lang="en" ng-app>
  <head>
    <title>Tutorials4Unity</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/bootstrap2/css/bootstrap.min.css">
    <link rel="stylesheet" href="/bootstrap2/css/bootstrap-responsive.min.css">
    <link rel="stylesheet" href="/bootstrap2/css/main.css">
    <link rel="stylesheet" href="/bootstrap2/css/ie9.css">
    <link rel="stylesheet" href="/bootstrap2/css/ie8.css">
    <link rel="stylesheet" href="/bootstrap2/css/font-awesome.min.css">
    <style></style>
    </head>
    <body>
  <div id="page-wrapper">
    <!-- Header-->
    <header id="header">
      <h1><a href="/">Tutorials4Unity</a></h1>
      <nav><a href="#menu">Menu</a></nav>
       <button onclick="topFunction()" id="myBtn" title="Go to top">Go to the Top</button>
    </header>
    <!-- Menu-->
    <nav id="menu">
      <div class="inner">
        <h2>Menu</h2>
        <ul class="links">
          <li><a href="/">Home</a></li>
          <li><a href="tutorialshome">Tutorials</a></li>
          <li><a href="resources">Resources</a></li>
          <li><a href="about">About</a></li>
          <li><a href="help">Help</a></li>
           <!--<li><a href="login">Log In</a></li>-->
          <!--<li><a href="signup">Sign Up</a></li>-->
        </ul><a href="#" class="close">Close</a>
      </div>
    </nav>
    <!-- Wrapper-->
    <section id="wrapper">
      <header>
        <div class="inner">
          
          <h2>Time is on our side to Count Scripts!</h2>
          
             <p>It's time to add our second script to our game.</p>
             
         
             <iframe width="420" height="315"
          src="">
          </iframe>
        </div>
      </header>
      
      <!-- Content-->
      <div class="wrapper">
        <div class="inner">
      
         <p>
           Welcome back to our second script! Make sure to have Unity and your
           project open because we are starting right off.</p>
            
            <p>Like what we did with ‘ColorChange’, click on your ‘Ball’, look at
            your ‘Inspector Window’, click on ‘Add Component’, type in
            ‘New Script’ to the search bar, select it, type in the name
            of our second script which is ‘CountWinOrLose’, and then
            click on ‘Create and Add’.</p>
            
            <p>Our second script, ‘CountWinOrLose’, should appear in the
            ‘Inspector’. Like before, click on the gear to the right hand
            side of ‘CountWinOrLose (Script)’ and click on ‘Edit Script’.
            ‘Visual Studios’ should then open up (if it is not already opened)
            and you should see the class for ‘CountWinOrLose’.</p>
            
            <p>The ‘CountWinOrLose’ class will be longer than ‘ColorChange’.</p>
            
            <p>First off, before we add anything inside ‘CountWinOrLose’,
            we are going to make a new call to a different libaray above
            ‘public class CountWinOrLose’. We are going to do this by
            first typing in ‘using’ and then calling on a new library
            call ‘UnityEngine.UI’. </p>
            
            <p>The line should look like this:</p>
            <p>using UnityEngine.UI;</p>
            
            <p>But we already have ‘UnityEngine’, why do we need to call on
            it twice and add ‘.UI’. The reason for this is ‘UnityEngine’
            calls on everything inside Unity, and while we want to be able
            to use it (and we will), we also want to call on a specific
            area in addition. ‘UI’ stands for ‘User Interface’ and this
            usually has objects that the player can see, but don’t usually
            directly interact with other objects. Items inside the
            ‘User Interface’ include buttons, text, etc.</p>
            
            <p>Now, let us begin to add code into our ‘CountWinOrLose’ class. </p>
            
            <p>We are going to add objects that we will use throughout our code.</p>
            
            <p>Type in:</p>
            
            <p>public int numOfBalls;
            int actualBallsNum = 10;
            public Text countText;
            
            public float timeLeft = 10f;
            public Text timeText;</p>
            
            <p>If you noticed first, some of these objects have public infront
            of them, while other don’t. The objects that do have public in
            front them are the objects that we want to be able to see and
            have be intractable with not only our ‘Ball’ but with our
            ‘Player’ object later on.</p>
            
            <p>Also an int is a full number while a float is a fraction of a
            number. So an int can be the number 1, while a float can be 1
            or 1.5. We are using ints to count how many balls have changed
            color (numOfBalls) and then later on we will compare that to
            the amount of balls we have in our game (actualBallsNum). While
            right now we only one ‘Ball’ object, in the next chapter we
            will learn how to add more to our ‘Scene View’.</p>
            
            <p>For time, we are using a float to count how much time we have
            left in our game (timeLeft) because time is barely ever a full
            exact number and it changes quickly. For ‘timeLeft’ we are
            starting at 10f. By adding f to the end of 10, we are telling
            our code that we specifically want this to be a float, just in case.</p>
            
            <p>Lastly, we want to show our ‘Player’ how much time they have
            left and how many objects they have changed the color of. To
            do that, we are creating text to show them (timeText, countText). </p>
            
            <p>Again we are not using the ‘Start()’ method. </p>
            
            <p>We are though using the ‘Update()’ method. The reason why we
            are is because we want time to be updated with each frame and
            we want to constantly be checking to see if our player has
            changed the color of all of the balls.</p> 
            
            <p>Inside the ‘Update()’ method, type in this:</p>
                    <p>timeLeft -= Time.deltaTime;
                    numOfBalls = 0;
            
                    startText.text = (timeLeft).ToString("0");
            
                    numOfBalls = CountingUp(numOfBalls);
            
                    if (timeLeft < 1)
                    {
                        WonOrLost(timeLeft, numOfBalls);
            
                    }</p>
            
            <p>We are first telling </p>
            
            
            
            
            
            
            <p>At the end here is how your code should look like:</p>
            <img src="bootstrap2/images/CountWinOrLose1.png" alt="" height="500" width="500">
            <img src="bootstrap2/images/CountWinOrLose2.png" alt="" height="500" width="500">
            <img src="bootstrap2/images/CountWinOrLose3.png" alt="" height="500" width="500">
            <img src="bootstrap2/images/CountWinOrLose4.png" alt="" height="500" width="500">
            <p>
            using System.Collections;</p>
            <p>using System.Collections.Generic;</p>
            <p>using UnityEngine;</p>
            <p>using UnityEngine.UI;</p>
            
            <p>public class CountWinOrLose : MonoBehaviour
            {</p>
            
               <p> //For Counting</p>
               <p> public int numOfBalls;</p>
                <p>int actualBallsNum = 10;</p>
                <p>public Text countText;</p>
            
                <p>//For Time</p>
               <p> public float timeLeft = 10f;</p>
                <p>public Text timeText;</p>
            
               <p> // Use this for initialization</p>
                <p>void Start()
                {</p>
            
                <p>}</p>
            
               <p> // Update is called once per frame</p>
                <p>void Update()
                {</p>
                   <p> timeLeft -= Time.deltaTime;</p>
                    <p>numOfBalls = 0;</p>
            
                    <p>startText.text = (timeLeft).ToString("0");</p>
            
                   <p> //For Counting</p>
                   <p> numOfBalls = CountingUp(numOfBalls);</p>
            
                    <p>//For Time</p>
                    <p>if (timeLeft < 1)
                    {</p>
                      <p>  WonOrLost(timeLeft, numOfBalls);</p>
            
                   <p> }</p>
            
                <p>}</p>
            
            
               <p> private int CountingUp(int countCurr)
                {</p>
                   <p> GameObject gameCurr;</p>
                   <p> GameObject[] gameItems = GameObject.FindGameObjectsWithTag("SphereBalls");</p>
            
                   <p> for (int i = 0; i < actualBallsNum; i++)
                    {</p>
            
                       <p> gameCurr = gameItems[i];</p>
            
                       <p> if (gameCurr.GetComponent<Renderer>().material.color == Color.green)
                        {</p>
                          <p>  countCurr++;</p>
                          <p>  countText.text = countCurr + "";</p>
                          
                      <p>  }</p>
            
                   <p> }</p>
                   <p> return countCurr;</p>
               <p> }</p>
            
            
                <p>private bool WonOrLost(float timeEnd, int countEnd)
                {</p>
                  <p>  if (timeEnd < 1 && countEnd == actualBallsNum)
                    {</p>
                   <p>     timeLeft = 0;</p>
                    <p>    startText.text = (timeEnd).ToString("WINNER");</p>
                    <p>    startText.color = Color.green;</p>
                    <p>    countText.text = "You won";</p>
                    <p>    return true;</p>
            
                   <p> }
                    else if (timeEnd < 1 && countEnd != actualBallsNum)
                    {</p>
                  <p>      timeLeft = 0;</p>
                 <p>       startText.text = (timeEnd).ToString("FAIL");</p>
                 <p>       startText.color = Color.red;</p>
                 <p>       countText.text = " You lost";</p>
                 <p>       return false;</p>
                 <p>   }</p>
                <p>    return false;</p>
               <p>}</p>
            
            <p>}</p>
            
            
            
            
            
            
            
            
           <p> One last time, this is how your code for should look like:</p>
           
           <a href="code" class="image"><img src="bootstrap2/images/CountWinOrLose1.png" alt=""></a>
           
           <img src="bootstrap2/images/CountWinOrLose1.png" alt="" height="500" width="500">
            <img src="bootstrap2/images/CountWinOrLose2.png" alt="" height="500" width="500">
            <img src="bootstrap2/images/CountWinOrLose3.png" alt="" height="500" width="500">
            <img src="bootstrap2/images/CountWinOrLose4.png" alt="" height="500" width="500">
                      <p>
            using System.Collections;</p>
            <p>using System.Collections.Generic;</p>
            <p>using UnityEngine;</p>
            <p>using UnityEngine.UI;</p>
            
            <p>public class CountWinOrLose : MonoBehaviour
            {</p>
            
               <p> //For Counting</p>
               <p> public int numOfBalls;</p>
                <p>int actualBallsNum = 10;</p>
                <p>public Text countText;</p>
            
                <p>//For Time</p>
               <p> public float timeLeft = 10f;</p>
                <p>public Text timeText;</p>
            
               <p> // Use this for initialization</p>
                <p>void Start()
                {</p>
            
                <p>}</p>
            
               <p> // Update is called once per frame</p>
                <p>void Update()
                {</p>
                   <p> timeLeft -= Time.deltaTime;</p>
                    <p>numOfBalls = 0;</p>
            
                    <p>startText.text = (timeLeft).ToString("0");</p>
            
                   <p> //For Counting</p>
                   <p> numOfBalls = CountingUp(numOfBalls);</p>
            
                    <p>//For Time</p>
                    <p>if (timeLeft < 1)
                    {</p>
                      <p>  WonOrLost(timeLeft, numOfBalls);</p>
            
                   <p> }</p>
            
                <p>}</p>
            
            
               <p> private int CountingUp(int countCurr)
                {</p>
                   <p> GameObject gameCurr;</p>
                   <p> GameObject[] gameItems = GameObject.FindGameObjectsWithTag("SphereBalls");</p>
            
                   <p> for (int i = 0; i < actualBallsNum; i++)
                    {</p>
            
                       <p> gameCurr = gameItems[i];</p>
            
                       <p> if (gameCurr.GetComponent<Renderer>().material.color == Color.green)
                        {</p>
                          <p>  countCurr++;</p>
                          <p>  countText.text = countCurr + "";</p>
                          
                      <p>  }</p>
            
                   <p> }</p>
                   <p> return countCurr;</p>
               <p> }</p>
            
            
                <p>private bool WonOrLost(float timeEnd, int countEnd)
                {</p>
                  <p>  if (timeEnd < 1 && countEnd == actualBallsNum)
                    {</p>
                   <p>     timeLeft = 0;</p>
                    <p>    startText.text = (timeEnd).ToString("WINNER");</p>
                    <p>    startText.color = Color.green;</p>
                    <p>    countText.text = "You won";</p>
                    <p>    return true;</p>
            
                   <p> }
                    else if (timeEnd < 1 && countEnd != actualBallsNum)
                    {</p>
                  <p>      timeLeft = 0;</p>
                 <p>       startText.text = (timeEnd).ToString("FAIL");</p>
                 <p>       startText.color = Color.red;</p>
                 <p>       countText.text = " You lost";</p>
                 <p>       return false;</p>
                 <p>   }</p>
                <p>    return false;</p>
               <p>}</p>
            
            <p>}</p>
            
          
     <div class="wrapper">
        <div class="inner">
           <p>Click on the Previous button if you think you missed something in the 
            last part or click the Next button to .</p>
          <div id="container">
            <button id="prevBtn" title="prev"><a href="tutorials3section6">Previous</a></button>
            <button id="nextBtn" title="next"><a href="tutorials3section8">Next</a></button>
          </div>
    
        </div>
      </div>
    </body>
    <!-- Footer-->
    <section id="footer">
      <div class="inner">
        <ul class="copyright">
          <li>© Untitled Inc. All rights reserved.</li>
          <li>Design: <a href="http://html5up.net">HTML5 UP</a></li>
        </ul>
      </div>
    </section>
  </div>
  <!-- Scripts-->
  
  <script src="bootstrap2/js/skel.min.js"></script>
  <script src="bootstrap2/js/jquery.min.js"></script>
  <script src="bootstrap2/js/jquery.scrollex.min.js"></script>
  <script src="bootstrap2/js/util.js"></script><!--[if lte IE 8]>
  <script src="bootstrap2/js/ie/respond.min.js"></script><![endif]-->
  <script src="bootstrap2/js/main.js"></script>
</body>