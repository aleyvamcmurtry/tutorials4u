<!doctype html>
<html lang="en" ng-app>
  <head>
    <title>Tutorials4Unity</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/bootstrap2/css/bootstrap.min.css">
    <link rel="stylesheet" href="/bootstrap2/css/bootstrap-responsive.min.css">
    <link rel="stylesheet" href="/bootstrap2/css/main.css">
    <link rel="stylesheet" href="/bootstrap2/css/ie9.css">
    <link rel="stylesheet" href="/bootstrap2/css/ie8.css">
    <link rel="stylesheet" href="/bootstrap2/css/font-awesome.min.css">
    <style></style>
    </head>
    <body>
  <div id="page-wrapper">
    <!-- Header-->
    <header id="header">
      <h1><a href="/">Tutorials4Unity</a></h1>
      <nav><a href="#menu">Menu</a></nav>
       <button onclick="topFunction()" id="myBtn" title="Go to top">Go to the Top</button>
    </header>
    <!-- Menu-->
    <nav id="menu">
      <div class="inner">
        <h2>Menu</h2>
        <ul class="links">
          <li><a href="/">Home</a></li>
          <li><a href="tutorialshome">Tutorials</a></li>
          <li><a href="resources">Resources</a></li>
          <li><a href="about">About</a></li>
          <li><a href="help">Help</a></li>
           <li><a href="codehome">Code</a></li>
           <!--<li><a href="login">Log In</a></li>-->
          <!--<li><a href="signup">Sign Up</a></li>-->
        </ul><a href="#" class="close">Close</a>
      </div>
    </nav>
    <!-- Wrapper-->
    <section id="wrapper">
      <header>
        <div class="inner">
          <h1>Tutorial 3 Section 10</h1>
          <h2>Final Touches</h2>
          
             <p>Let's finish up our game.</p>
             
             <p>If you would like to go back to any of the previous tutorials,
              please click <a href="tutorialshome">here!</a></p>
              <p>If you would like to look at the code we just wrote, click on <a href="codehome">code</a> to go check it out.</p>
            
              
             <!-- <iframe width="420" height="315"
          src="">
          </iframe> -->
        </div>
      </header>
      
      <!-- Content-->
      <div class="wrapper">
        <div class="inner">
      
          <p>Welcome back! </p>
           <h4>Please remember to save after we have made any changes and especially before you try to test out your game. 
          If you try to play before you save, the new changes will not take effect and you will have to redo your changes.
          You can do this by going up to <b>File</b> and click on <b>Save</b>. You can also do this by pressing and holding <b>ctrl + S</b> (for PC)
          or <b>Command + S</b> (for Mac).</h4>
           
            
            <p>We are almost done making our game! We have a couple of last things to do before we can test it out and make sure everything works. 
            </p>
            
            <p>Real quick, go to your <b>Player</b>, click on <b>Main Camera</b>, and then click on <b>GvrReticlePointer</b>. 
            Make sure that the positions of X, Y, and Z are all set to 0. If they are not, it can get a mess with how you click at the 
            <b>Globes</b>.</p>
            
            <h3>Canvas</h3>
            
            <p>We have our <b>Globe</b>, we can click on it to change its color. We can move our cursor around the screen. 
            But we have a problem now. How do we show how much time the player has left and how many Globes the player has clicked on?
            </p>
          <p>  If you click on our <b>Globe</b>, look at the <b>Inspector</b>, and go down to the <b>CountWinOrLose()</b> script,
          you should see two empty spaces next to <b>CountGlobes</b> text and Time text. In these spaces,
          we want to out in a text that the user will see.
            </p>
            <p>But we currently don’t have any text anywhere in our game.
            </p>
           <p> Well now we will create these texts. 
            </p>
            <p>We will be creating text boxes. Before we get to the creating,
            we need to understand what we are doing first. 
            </p>
            <p>We want our player to see the time that is left in the game
            and how many Globes they have clicked on. Our player needs to see this information at all times. So if the player
            looks right, left, up, down, they can still see the information on the screen. 
            </p>
            <p>We can do this by adding text boxes, boxes that hold text,
            to the camera since the camera is attached to our player. 
            </p>
           <p> <b>Text boxes</b> are <b>UI</b> (User Interface) objects though. <b>UI</b> objects
           are objects the user can view, see, and interact with on a screen.
           Unlike the Globes we created, where they can permanently change in
           the game, UI objects cannot be permanently changed by the player.
           They can reappear and disappear, but the player does not have full control of that. 
            </p>
           <p> <b>UI</b> objects in Unity can only be added to a canvas, which
           is just a holder for all of these elements. Think of the
           canvas as a window. You can put stickers on it, shine light
           through it, see through it, put blinds to cover it, but it’s
           always there and you can’t permanently attach food or clothes
           to it. That’s the same thing here. </p>
           <p> So now that you kinda have an idea about what we are doing,
            let’s get started adding our textboxes to our player.
            </p>
           <p> First, click on the triangle next to our player
           object. It should reveal our <b>Main Camera</b>. 
            Now there are three ways you can do this.
            You can right click on our <b>Main Camera</b>,
            go down to <b>UI</b>, hover to the right, and
            click on <b>Text</b>. The <b>Canvas</b> will immediately appear
            under <b>Main Camera</b> with a <b>Text</b> underneath the <b>Canvas</b>. 
            The second way is by clicking on the <b>+</b> plus button
            in the <b>Hierarchy</b>. There you can go down to <b>UI</b>,
            hover to the right, and click on <b>Text</b>. The <b>Canvas</b>
            will immediately appear in our /b>Hierarchy</b>. Drag
            and drop the Canvas onto our <b>Main Camera</b>. 
            </p>
            <p>The third way is clicking on our <b>GameObject</b>
            on our <b>Menu Bar</b>, go down to <b>UI</b>, hover to the right,
            and click on <b>Text</b>. Like the second way, the <b>Canvas</b>
            will immediately appear in our <b>Hierarchy</b>. 
            </p>
            <p>Your <b>Player</b> object now should look like this:</p>
            
            <p><li>Player</li>
            	<li>  Main Camera</li>
            	<li>    Canvas</li>
            			<li>    Text</li>
            		<li>  GvrReticlePointer</li></p>
            
          <p> Your Text is a child of Canvas, which
          is a child of Main Camera which is a child of our Player object. 
            </p>
           <p> Now we need to either right-click on
           our <b>Canvas</b>, click on the plus button in our
           <b>Hierarchy</b>, or click on <b>GameObject</b> in our <b>Menu
           Bar</b> and add another <b>Text</b> object to our <b>Canvas</b>
           since our project needs two texts and not just one. 
            </p>
          <p>  We are going rename our <b>Texts</b> to
          <b>countDownText</b> and <b>globeCountText</b>. It does not matter which one,
          as long as you have one of each. 
            </p>
            
            <p>Now click on your <b>Canvas</b>. You shouldn't be able to see it yet. </p>
            <p>Click on your <b>Inspector</b>, click on <b>Canvas</b> (the Canvas
            inside the Canvas), and change the <b>Render Mode</b> to World Space.</p>
            
            <p>Still in the <b>Inspector</b>, under <b>Rect Transform</b> and under <b>Anchors</b>, change the following information:</p>
            
            <li>Min X 0.5 Y 0.5</li>
            <li>Max X 0.5 Y 0.5</li>
            <li>Scale X 0.02 Y 0.02 Z 0.01</li>
            
            <p>Above it change:</p>
            <li>Pos X to 0</li>
            <li>Pos Y to 0</li>
            <li>Pos Z to 0</li>
            <li>Width to 100</li>
            <li>Height to 100</li>
            
            <p>What we just did was make the <b>Canvas</b> small enough that we can
            see it and also able to move around with our camera. So when we fix our textboxes
            we can see them on the canvas. </p>
            
            <p>Next we are going to fix our textboxes. We can't see them on our screen (and you can double check this
            by looking at our <b>Game View</b>. We are going to fix them so we can see them.</p>
            
            <p>Click on <b>globeCountText</b>. Look in the <b>Inspector</b>. Change the values of:</p>
            
            <li>Pos X: 130</li>
            <li>Pos Y: 50</li>
            <li>Pos Z: 50</li>
            
            <p>Click on <b>countDownText</b>. Look in the <b>Inspector</b>. Change the values of:</p>
            
            <li>Pos X:-40</li>
            <li>Pos Y: 50</li>
            <li>Pos Z: 50</li>
            
            <p>If you do not do this, you will not be able to click on your <b>Globes</b>, since the <b>Main Camera</b> will
            only see the text as something it can interact with. We also don't want our text to be right next to each other.</p>
            
          
            
            <p>In the <b>Inspector</b> for both of these texts, go down to <b>Text</b>
            and delete the information inside. We don't want our player playing only
            to see 'New Text' pop up when they begin playing. </p>
            
            <p>When done, go to our <b>Globe</b>, look at the <b>Inspector</b>,
            go down to <b>CountWinOrLose (Script)</b> and you will see two empty
            spots next to CountGlobes Text and Time Text. Drag and drop <b>globeCountText</b>
            and <b>countDownText</b> into their respective spots. </p>
            
            
            <p>Now you can test the game and see if you need to do any 
            adjustments with the text or with the globe.</p>
            
            
            <h3>Globe:</h3>
            <p>Do you remeber our good friend Globe that we made
            in <a href="tutorials3section5">section 5</a>)? 
            If you do, great! If not, don’t worry, you can always click <a href="tutorials3section5">here</a> to go back and review it. 
            </p>
            
            <p>What we are going to do now is make copies of our <b>Globe</b>. By making copies, we don't have to add all of the scripts and materials
            to a group of new objects. </p>
            
            <p>Now first click on our <b>Globe</b> in the <b>Hierarchy</b> and look over at the <b>Inspector</b>.</p>
            
            <p>Go look down at our <b>CountWinOrLose()</b> script. You will see TimeLeft 10. Change that 10 into a 30. </p>
            
            <p>Next, click on the three little dots next to the <b>CountWinOrLose()</b> script, click on <b>Edit Script</b>.</p>
            <p>Now in our script, at the top where we have <code>int actualGlobesNum = 1</code>, change that 1 to a 10. We are telling our 
            <b>CountWinOrLose()</b> script that we will have 10 objects, not 1, that the player needs to find and change. </p>
           <p>Go a couple of lines down and look at where we have <code>timeLeft = 10f</code>. Change the 10f to a 30f. We are telling our
           <b>CountWinOrLose()</b> script that we want to give our player a maximum of 30 seconds to look and change all of the colors of the <b>Globes</b>.</p>
            
            
            
            
            <p>Now we are going to right click 
            on the name of our <b>Globe</b> in our <b>Hierarchy</b>.
            Next, lower your mouse down and click on <b>Duplicate</b>.
            Now, in your <b>Hierarch</b>y, you should see your original <b>Globe</b> and <b>Globe (1)</b>.
            <b>Globe (1)</b> is an exact clone of your original Globe. 
            </p>
            <p>On your screen, you may not immediately see where your
            <b>Globe (1)</b> is at. That’s because it’s in the exact same position of your <b>Globe</b>. 
            </p>
            <p>So what we are going to do now is click on <b>Globe (1)</b>
            in your <b>Hierarchy</b>, and use the blue and red arrows to move it around your screen using
            the <b>Move Tool</b> (the four arrows next to the hand). You can place it anywhere,
            as long as it remains on your plane and you can see it when you play your game. 
            </p>
            <p>Next, we are going to repeat this, until we have total of 10 amount of <b>Globes</b>
            (including your original Globe) on the board. Now we have a little
            group of<b> Globes</b> and we didn’t have to create each one by scratch.
            So you should have Globe, Globe (1), Globe (2)... Globe (9) (since our first Globe counts as 1 globe). 
            </p>
            
            <p>Make sure to move them all around your screen, but make sure your <b>Player</b> can see them and don't hide underneath or behind objects.
            If you do, then you can't win the game.</p>
            
            <p>If you want to have more or less Globes to play with or if you want to give the player more or less time,
            you can always change the amount you need to win in CountWinOrLose. If you do change the time, remember to change it for each Globe.
            </p>
         
            
            <p>It’s time to test! 
            </p>
            <p>Click on the play button on your <b>Game bar</b> and your game should immediately begin playing. 
            </p>
            
            <p>Your game should currently look like the gif below. </p>
  
            <img src="bootstrap2/images/gifs/won.gif" class="img-fluid" width= "75% \9" >
              
            
            
            <p>If everything works great, you’re done with your game. 
            If something acts weird, try to see what is acting weird
            and go through the past sections <a href="tutorials3">here</a> and double-check that
            you followed all of the steps correctly. Don’t feel bad if you missed or forgot something, everyone makes mistakes. 
            </p>
            <p>If you are having a problem with:
            </p>
            <p>Colors changing- Go to <a href="tutorials3section6">section 6</a> to double-check.
            </p>
            <p>Cursor not appearing-  Go to <a href="tutorials2">tutorial 2</a> or <a href="tutorials3">tutorial 3</a> to double-check.
            </p>
            <p>Not winning or something off- Go to <a href="tutorials3section7">section 7</a> to double-check. 
            </p>
            
           <p> Remember, at the end of the day, this is <strong>YOUR</strong> game. You can add different colors,
           change the countdown time, add more or fewer Globes, change the Globes into cubes,
           add in trees and cars using the assets store. These tutorials are here so you can get a base to start with. 
            </p>
            
            <p>To change the countdown time, make sure change it from 10 to the time you want to give the player in your
            <b>CountWinOrLose</b> script and change timeLeft.</p>
            
            <p>If you do choose to add trees, cars, and other elements, try to make
            sure your Globes are still in view to the user when testing. If a tree is blocking a Globe, it can stop you from winning the game. 
            </p>
            
            <p>Double check that the information for the <b>Globe</b> in the <b>Inspector</b> looks like below:</p>
            <img src="bootstrap2/images/colorChangeV1.jpg" class="img-fluid" width= "50% \9"; > 




           <p> Yay! You have a working game! You can go ahead and show your friends.</p>
            
            <p>But we are not done yet! We have one more tutorial to go through before we can truly call this a virtual reality game. </p>
            
            <p>Click next so we can finish!</p>


 <div id="container">
            <button id="prevBtn" title="prev"><a href="tutorials3section8">Previous</a></button>
            <button id="nextBtn" title="next"><a href="tutorials4">Next</a></button>
          </div>

  
          <p>Below, you should see examples on how your game should currently act like when you:</p>
  
  <h3>Win</h3>
   <img src="bootstrap2/images/gifs/lost1.gif" class="img-fluid" width= "75% \9">
              
  <h3>Lose</h3>
  <img src="bootstrap2/images/gifs/lost2.gif" class="img-fluid" width= "75% \9">
  
  <h3>Lose and try to win by clicking on the last globe.</h3>
  <img src="bootstrap2/images/gifs/won.gif" class="img-fluid" width= "75% \9">
  
  
  
          
     <div class="wrapper">
        <div class="inner">
           <p>Click on the Previous button if you think you missed something in the 
            last part or click the Next button to .</p>
          <div id="container">
            <button id="prevBtn" title="prev"><a href="tutorials3section8">Previous</a></button>
            <button id="nextBtn" title="next"><a href="tutorials4">Next</a></button>
          </div>
    
        </div>
      </div>
    </body>
    <!-- Footer-->
    <section id="footer">
      <div class="inner">
        <ul class="copyright">
          <li>© Untitled Inc. All rights reserved.</li>
          <li>Design: <a href="http://html5up.net">HTML5 UP</a></li>
        </ul>
      </div>
    </section>
  </div>
  <!-- Scripts-->
  
  <script src="bootstrap2/js/skel.min.js"></script>
  <script src="bootstrap2/js/jquery.min.js"></script>
  <script src="bootstrap2/js/jquery.scrollex.min.js"></script>
  <script src="bootstrap2/js/util.js"></script><!--[if lte IE 8]>
  <script src="bootstrap2/js/ie/respond.min.js"></script><![endif]-->
  <script src="bootstrap2/js/main.js"></script>
</body>