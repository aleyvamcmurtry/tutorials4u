<!doctype html>
<html lang="en" ng-app>
  <head>
    <title>Tutorials4Unity</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/bootstrap2/css/bootstrap.min.css">
    <link rel="stylesheet" href="/bootstrap2/css/bootstrap-responsive.min.css">
    <link rel="stylesheet" href="/bootstrap2/css/main.css">
    <link rel="stylesheet" href="/bootstrap2/css/ie9.css">
    <link rel="stylesheet" href="/bootstrap2/css/ie8.css">
    <link rel="stylesheet" href="/bootstrap2/css/font-awesome.min.css">
    <style></style>
    </head>
    <body>
  <div id="page-wrapper">
    <!-- Header-->
    <header id="header">
      <h1><a href="/">Tutorials4Unity</a></h1>
      <nav><a href="#menu">Menu</a></nav>
       <button onclick="topFunction()" id="myBtn" title="Go to top">Go to the Top</button>
    </header>
    <!-- Menu-->
    <nav id="menu">
      <div class="inner">
        <h2>Menu</h2>
        <ul class="links">
          <li><a href="/">Home</a></li>
          <li><a href="tutorialshome">Tutorials</a></li>
          <li><a href="resources">Resources</a></li>
          <li><a href="about">About</a></li>
          <li><a href="help">Help</a></li>
           <li><a href="codehome">Code</a></li>
           <!--<li><a href="login">Log In</a></li>-->
          <!--<li><a href="signup">Sign Up</a></li>-->
        </ul><a href="#" class="close">Close</a>
      </div>
    </nav>
    <!-- Wrapper-->
    <section id="wrapper">
      <header>
        <div class="inner">
          
          <h2>Final Touches</h2>
          
             <p>Let's finish up our game.</p>
             
             <p>If you would like to go back to any of the previous tutorials,
              please click <a href="tutorialshome">here!</a></p>
             <!-- <iframe width="420" height="315"
          src="">
          </iframe> -->
        </div>
      </header>
      
      <!-- Content-->
      <div class="wrapper">
        <div class="inner">
      
          <p>Welcome back! </p>
            
            
            <p>We are almost done making our game! We have a couple of last things to do before we can test it out and make sure everything works. 
            </p>
            <p>Canvas</p>
            
            <p>We have our Sphere, we can click on it to change its color. We can move our cursor around the screen. But we have a problem now. How do we show how much time the player has left and how many spheres the player has clicked on?
            </p>
          <p>  If you click on our Sphere, look at the Inspector, and go down to the ______code, you should see two empty spaces next to _______ text and _____ text. In these spaces, we want to out in a text that the user will see.
            </p>
            <p>But we currently don’t have any text anywhere in our game.
            </p>
           <p> Well now we will create these texts. 
            </p>
            <p>We will be creating text boxes. Before we get to the creating, we need to understand what we are doing first. 
            </p>
            <p>We want our player to see the time that is left in the game and how many spheres they have clicked on. Our player needs to see this information at all times. So if the player looks right, left, up, down, they can still see the information on the screen. 
            </p>
            <p>We can do this by adding text boxes, boxes that hold text, to the camera since the camera is attached to our player. 
            </p>
           <p> Text boxes are UI (User Interface) objects though. UI objects are objects the user can view, see, and interact with on a screen. Unlike the spheres we created, where they can permanently change in the game, UI objects cannot be permanently changed by the player. They can reappear and disappear, but the player does not have full control of that. 
            </p>
           <p> UI objects in Unity can only be added to a canvas, which is just a holder for all of these elements. Think of the canvas as a window. You can put stickers on it, shine light through it, see through it, put blinds to cover it, but it’s always there and you can’t permanently attach food or clothes to it. That’s the same thing here. 
            So now that you kinda have an idea about what we are doing, let’s get started adding our textboxes to our player.
            </p>
           <p> First, click on the triangle next to our player object. It should reveal our Main Camera. 
            Now there are three ways you can do this. You can right click on our Main Camera, go down to UI, hover to the right, and click on Text. The Canvas will immediately appear under Main Camera with a Text underneath the Canvas. 
            The second way is by clicking on the plus button in the Hierachy. There you can go down to UI, hover to the right, and click on Text. The Canvas will immediately appear in our Hierarchy. Drag and drop the Canvas onto our Main Camera. 
            </p>
            <p>The third way is clicking on our GameObject on our Menu Bar, go down to UI, hover to the right, and click on Text. Like the second way, the Canvas will immediately appear in our Hierarchy. 
            </p>
            <p>Your Player object now should look like this:</p>
            
            <p>Player
            	Main Camera
            		Canvas
            			Text</p>
            
          <p>  Your Text is a child of Canvas, which is a child of Main Camera which is a child of our Player object. 
            </p>
           <p> Now we need to either right-click on our Canvas, click on the plus button in our Hierarchy, or click on GameObject in our Menu Bar and add another Text object to our Canvas since our project needs two texts and not just one. 
            </p>
          <p>  We are going rename our Texts to countDownText and ballCountText. It does not matter which one, as long as you have one of each. 
            </p>
            <p>Sphere:</p>
            <p>Do you remeber our good friend Sphere that we made in section 5 (link to section 5)? If you do, great! If not, don’t worry, you can always click on THIS to go back and review it. 
            </p>
            <p>We are going to right click (if on PC) on the name of our Sphere in our Hierachy. Next, lower your mouse down and click on ‘Duplicate’. Now, in your Hierachy, you should see your original Sphere and Sphere (1). Sphere (1) is an exact clone of your original Sphere. 
            </p>
            <p>On your screen, you may not immediately see where your Sphere (1) is at. That’s because it’s in the exact same position of your Sphere. 
            </p>
            <p>So what we are going to do now is click on Sphere (1) in your Hierarchy, and use the blue and red arrows to move it around your screen. You can place it anywhere, as long as it remains on your plane and you can see it when you play your game. 
            </p>
            <p>Next, we are going to repeat this, until we have 10 amount of spheres (including your original Sphere) on the board. Now we have a little group of spheres and we didn’t have to create each one by scratch. So you should have Sphere, Sphere (1), Sphere (2)... Sphere (9). 
            </p>
            <p>If you want to have more or less spheres to play with, you can always change the amount you need to win in ________.
            </p>
            <p>It’s time to test! 
            </p>
            <p>Click on the play button on your ____ bar and your game should immediately begin playing. To move on your computer, on PC press Alt and ____
            On a Mac, press Ctrl and
            </p>
            <p>If everything works great, you’re done with your game. If something acts weird, try to see what is acting weird and go through the past sections here and double-check that you followed all of the steps correctly. Don’t feel bad if you missed or forgot something, everyone makes mistakes. 
            </p>
            <p>If you are having a problem with:
            </p>
            <p>Colors changing- Go to tutorial 6 to double-check.
            </p>
            <p>Cursor not appearing-  Go to tutorial 2 and tutorial 3 to double-check
            </p>
            <p>Not winning or something off- Go to tutorial 7 to double-check. 
            </p>
           <p> Remember, at the end of the day, this is YOUR game. You can add different colors, change the countdown time, add more or fewer spheres, change the spheres into cubes, add in trees and cars using the assets store. These tutorials are here so you can get a base to start with. 
            </p>
            <p>If you do choose to add trees, cars, and other elements, try to make sure your Spheres are still in view to the user when testing. If a tree is blocking a Sphere, it can stop you from winning the game. 
            </p>
           <p> Yay! You have a working game! You can go ahead and show your friends.</p>
            
            <p>But we are not done yet! We have one more tutorial to go through before we can truly call this a virtual reality game. </p>
            
            <p>Click next so we can finish!</p>



          <p>Canvas</p>  
          <p>Duplicates</p>
          
          <p>Now you are ready to test and make sure everything works!</p>
          
     <div class="wrapper">
        <div class="inner">
           <p>Click on the Previous button if you think you missed something in the 
            last part or click the Next button to .</p>
          <div id="container">
            <button id="prevBtn" title="prev"><a href="tutorials3section7">Previous</a></button>
            <button id="nextBtn" title="next"><a href="tutorials4">Next</a></button>
          </div>
    
        </div>
      </div>
    </body>
    <!-- Footer-->
    <section id="footer">
      <div class="inner">
        <ul class="copyright">
          <li>© Untitled Inc. All rights reserved.</li>
          <li>Design: <a href="http://html5up.net">HTML5 UP</a></li>
        </ul>
      </div>
    </section>
  </div>
  <!-- Scripts-->
  
  <script src="bootstrap2/js/skel.min.js"></script>
  <script src="bootstrap2/js/jquery.min.js"></script>
  <script src="bootstrap2/js/jquery.scrollex.min.js"></script>
  <script src="bootstrap2/js/util.js"></script><!--[if lte IE 8]>
  <script src="bootstrap2/js/ie/respond.min.js"></script><![endif]-->
  <script src="bootstrap2/js/main.js"></script>
</body>