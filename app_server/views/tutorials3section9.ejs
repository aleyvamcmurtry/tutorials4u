<!doctype html>
<html lang="en" ng-app>
  <head>
    <title>Tutorials4Unity</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/bootstrap2/css/bootstrap.min.css">
    <link rel="stylesheet" href="/bootstrap2/css/bootstrap-responsive.min.css">
    <link rel="stylesheet" href="/bootstrap2/css/main.css">
    <link rel="stylesheet" href="/bootstrap2/css/ie9.css">
    <link rel="stylesheet" href="/bootstrap2/css/ie8.css">
    <link rel="stylesheet" href="/bootstrap2/css/font-awesome.min.css">
    <style></style>
    </head>
    <body>
  <div id="page-wrapper">
    <!-- Header-->
    <header id="header">
      <h1><a href="/">Tutorials4Unity</a></h1>
      <nav><a href="#menu">Menu</a></nav>
       <button onclick="topFunction()" id="myBtn" title="Go to top">Go to the Top</button>
    </header>
    <!-- Menu-->
    <nav id="menu">
      <div class="inner">
        <h2>Menu</h2>
        <ul class="links">
          <li><a href="/">Home</a></li>
          <li><a href="tutorialshome">Tutorials</a></li>
          <li><a href="resources">Resources</a></li>
          <li><a href="about">About</a></li>
          <li><a href="help">Help</a></li>
           <li><a href="codehome">Code</a></li>
           <!--<li><a href="login">Log In</a></li>-->
          <!--<li><a href="signup">Sign Up</a></li>-->
        </ul><a href="#" class="close">Close</a>
      </div>
    </nav>
    <!-- Wrapper-->
    <section id="wrapper">
      <header>
        <div class="inner">
          <h1>Tutorial 3 Section 9</h1>
          <h2>WonOrLost!</h2>
          
             <p> Let's get into the WonOrLost() method.</p>
             
             <p>If you would like to go back to any of the previous tutorials,
              please click <a href="tutorialshome">here!</a></p>
              
              
              
              
             <!-- <iframe width="420" height="315"
          src="">
          </iframe> -->
        </div>
      </header>
      
      <!-- Content-->
      <div class="wrapper">
        <div class="inner">
      
          <p>Welcome back! </p>
          
          
          <h4>Please remember to save after we have made any changes and especially before you try to test out your game. 
          If you try to play before you save, the new changes will not take effect and you will have to redo your changes.
          You can do this by going up to <b>File</b> and click on <b>Save</b>. You can also do this by pressing and holding <b>ctrl + S</b> (for PC)
          or <b>Command + S</b> (for Mac).</h4>
             <p><strong>Remember whenever we add in new code, have it start on a new line. If not, 
            all of your code is going to look very messy and if you have a problem, it will be harder for you to find what the issue is.</strong></p>
            
           
           
           <p>We are now going to create our <b>WonOrLost()</b> method that is a part of our
        <b>CountWinOrLose()</b> script. </p>
        
        <p>Here is what the method <b>WonOrLost()</b> is going to do. </p>
        
        
        <p>If our player has time left in the game, the WonOrLost() method is going to check to see
        if they player has won or not. If they won (that means that they have clicked on all of the globes and turned
        them green), they our game will tell them that they won. If the player lost (they didn't click on all the globes in
        time), then our game will tell they have lost. </p>
        
        <p>Like <b>ChangeGlobeColor()</b> method, our method is going to be <b>private</b>.</p>
        <p>It is going to return a bool, short for boolean, which is a shorter way of saying true or false. So 
        we are going to return a true or false answer.</p>
        
        <p>We are going take in two parameters: a float called timeL (so we can know the current time) and an int (so we can know how many Globes
        the player has clicked on).</p>
        
        <p>Your line should look like this:</p>
        
        <code>private bool WonOrLost(float timeL, int countGlobe){ }</code>
        
        <p>With our <b>WonOrLost()</b> method, we are going to do a lot of "If this is true, do this. If this isn't true, do this next thing."</p>
        
        <p>Inside the two brackets, let type the first group of code. </p>
        
        <pre><code>
        if (timeL >= 0 && countGlobe == actualGlobesNum){
            timeText.text = (timeLeft).ToString("WINNER");
            timeText.color = Color.green;
            countGlobesText.text = " You won";
            return true;
        }//if
          
        </code></pre>
        
        <p>Remember if statements? Well, we will be using if statements to help check to see if our player has won or lost.</p>
        
        <p>So this first line reads like this: If our timeL is bigger or equal to 0 and if our countGlobe is equal to our actualGlobesNum, then go inside.
        If not, skip this section.</p>
        
        <p>Inside our if statement, we are going to set our timeText to read "WINNER", change the color of the text to green, set our 
        countGlobesText to say that our player "Won", and we are returning true, since our method wants us to return a value of true or false. </p>
        
        <p>We then close up our if statement.</p>
        
        <p>Now type in the next group of code:</p>
        
        <pre><code>
        else if ((timeL < 0 && countGlobe != actualGlobesNum)){
            timeLeft = 0;
            timeText.text = (timeLeft).ToString("FAIL");
            timeText.color = Color.red;
            countGlobesText.text = " You lost";
            return false;
        }//else if
       </code></pre>
        
        
         <p>So this first line reads like this: If our timeL is less than our 0 and if our countGlobe is not equal to our actualGlobesNum, then go inside.
        If not, skip this section.</p>
        
        <p>If you have an if statement, but you want to double check something else, you can type else if after the closing bracket } of our first if statement.
        You can make some of these so you can test for different things. </p>
        
        <p>Inside our else if statement, we are going to set our timeText to read "Fail", change the color of the text to red, set our 
        countGlobesText to say that our player "Lost", and we are returning false, since our method wants us to return a value of true or false. </p>
        
        
        
        <pre><code>
         else if (timeL < -1 && countGlobe == actualGlobesNum){
            timeLeft = 0;
            timeText.text = (timeLeft).ToString("FAIL");
            timeText.color = Color.red;
            countGlobesText.text = " You lost";
            return false;
        }//else if
         return false;
        </code></pre>
        
        
       <p>So this first line reads like this: If our timeL is less than our -1 and if our countGlobe is equal to our actualGlobesNum, then go inside.
        If not, skip this section.</p>
        
        <p>Inside our else if statement, we are going to set our timeText to read "Fail", change the color of the text to red, set our 
        countGlobesText to say that our player "Lost", and we are returning false, since our method wants us to return a value of true or false. </p>
        
        <p>Finally, type in return false, so you can return a value of true or false. If you do not do this, your method will not work. </p>
        
        
        
        
        
           <p>Finally you should have this for your WonOrLost() method.</p>
   
   <pre><code>
    private bool WonOrLost(float timeL, int countGlobe){
        if (timeL >= 0 && countGlobe == actualGlobesNum){
            timeText.text = (timeLeft).ToString("WINNER");
            timeText.color = Color.green;
            countGlobesText.text = " You won";
            return true;
        }//if
        else if ((timeL < 0 && countGlobe != actualGlobesNum)){
            timeLeft = 0;
            timeText.text = (timeLeft).ToString("FAIL");
            timeText.color = Color.red;
            countGlobesText.text = " You lost";
            return false;
        }//else if
        else if (timeL < -1 && countGlobe == actualGlobesNum){
            timeLeft = 0;
            timeText.text = (timeLeft).ToString("FAIL");
            timeText.color = Color.red;
            countGlobesText.text = " You lost";
            return false;
        }//else if
        return false;
    }//WonOrLost   
   </code></pre> 
         
         
    
    
    <p>This section was very long. With all of our hard work, your code should now look like this
    all together:</p>
         
    <pre><code>
using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;

public class CountWinOrLose : MonoBehaviour{

    public int numOfGlobes;
    int actualGlobesNum = 1;
    public Text countGlobesText;

    public float timeLeft = 10f;
    public Text timeText;

    void Start(){  }

    // Update is called once per frame
    void Update(){
        timeLeft -= Time.deltaTime;
        numOfGlobes = 0;

        if (timeLeft > -1){
            numOfGlobes = CountingUp(numOfGlobes);

            if (numOfGlobes != actualGlobesNum){
                timeText.text = (timeLeft).ToString("0");
            }//if
            WonOrLost(timeLeft, numOfGlobes);
        }//if
    }//Update

    private int CountingUp(int countG){
        GameObject gameObj;
        GameObject[] gameObjects = GameObject.FindGameObjectsWithTag("GlobeObject");

        for (int i = 0; i < actualGlobesNum; i++) {

            //had at <9, forgot 0 is an part in the index,
            //so was giving me IndexOutOfRangeException
            //cause there was nothing at index spot 8
            gameObj = gameObjects[i];

            if (gameObj.GetComponent<  Renderer  >().material.color == Color.green){
                countG++;
                countGlobesText.text = countG + "";
            }//if
        }//for
        return countG;
    }//CountingUp


    private bool WonOrLost(float timeL, int countGlobe){
        if (timeL >= 0 && countGlobe == actualGlobesNum){

            timeText.text = (timeLeft).ToString("WINNER");
            timeText.color = Color.green;
            countGlobesText.text = " You won";
            return true;
        }//if
        else if ((timeL < 0 && countGlobe != actualGlobesNum)) {
            timeLeft = 0;
            timeText.text = (timeLeft).ToString("FAIL");
            timeText.color = Color.red;
            countGlobesText.text = " You lost";
            return false;
        }//else if
        else if (timeL < -1 && countGlobe == actualGlobesNum){
            timeLeft = 0;
            timeText.text = (timeLeft).ToString("FAIL");
            timeText.color = Color.red;
            countGlobesText.text = " You lost";
            return false;
        }//else if
        return false;
    }//WonOrLost
}//CountWinOrLose
    </code></pre>
    
    
    
                  <img src="bootstrap2/images/colorChangeV1.jpg" class="img-fluid" width= "50% \9"; > 

    
    <p>All of our code is done! Yay! Unfortunately we are not done creating our game just yet. 
    We have a few more things to add. Go to the next section to check them out. </p>
         
         
          
     <div class="wrapper">
        <div class="inner">
           <p>Click on the Previous button if you think you missed something in the 
            last part or click the Next button to .</p>
          <div id="container">
            <button id="prevBtn" title="prev"><a href="tutorials3section8">Previous</a></button>
            <button id="nextBtn" title="next"><a href="tutorials3section10">Next</a></button>
          </div>
    
        </div>
      </div>
    </body>
    <!-- Footer-->
    <section id="footer">
      <div class="inner">
        <ul class="copyright">
          <li>© Untitled Inc. All rights reserved.</li>
          <li>Design: <a href="http://html5up.net">HTML5 UP</a></li>
        </ul>
      </div>
    </section>
  </div>
  <!-- Scripts-->
  
  <script src="bootstrap2/js/skel.min.js"></script>
  <script src="bootstrap2/js/jquery.min.js"></script>
  <script src="bootstrap2/js/jquery.scrollex.min.js"></script>
  <script src="bootstrap2/js/util.js"></script><!--[if lte IE 8]>
  <script src="bootstrap2/js/ie/respond.min.js"></script><![endif]-->
  <script src="bootstrap2/js/main.js"></script>
</body>